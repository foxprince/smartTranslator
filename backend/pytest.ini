[tool:pytest]
# pytest配置文件

# 测试目录
testpaths = tests

# Python文件模式
python_files = test_*.py *_test.py

# Python类模式
python_classes = Test*

# Python函数模式
python_functions = test_*

# 添加选项
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    --durations=10
    --cov=app
    --cov-report=html
    --cov-report=term-missing
    --cov-fail-under=80

# 标记定义
markers =
    slow: 标记测试为慢速测试
    integration: 标记测试为集成测试
    unit: 标记测试为单元测试
    api: 标记测试为API测试
    provider: 标记测试为提供商测试
    cache: 标记测试为缓存测试
    quality: 标记测试为质量评估测试
    cost: 标记测试为成本跟踪测试

# 最小版本要求
minversion = 6.0

# 异步测试支持
asyncio_mode = auto

# 过滤警告
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:requests.*

# 日志配置
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# 覆盖率配置
[coverage:run]
source = app
omit = 
    */tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*
    */alembic/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
